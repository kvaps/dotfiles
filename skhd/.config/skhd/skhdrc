# delete key
f12: skhd -k 'delete'

cmd - return : open -n -a "/Applications/Alacritty.app"
alt - return : open -n -a "/Applications/Alacritty.app"


# Switch sticky windows
# 0x32: ` (tilde)
#alt - 0x32: yabai -m window --focus "$(yabai -m query --windows | jq -re "[sort_by(.id) | .[] | select(.app == (\"Firefox\", \"Telegram\")) | .id] | nth(1 + index($(yabai -m query --windows --window | jq '.id'))) // first")"
cmd - 0x32: yabai -m window --focus "$(yabai -m query --windows | jq -re "[ [.[] | select(.sticky==1)] | unique_by(.id) | sort_by(.id)[] | .id ] | nth(1 + index($(yabai -m query --windows --window | jq '.id'))) // first")"



alt - m : yabai -m window --toggle zoom-fullscreen; yabai -m window --focus "$(yabai -m query --windows --window | jq -er .id)"



# Map Czech symbols (ralt is mapped to caps_lock)
ralt         - a : skhd -t 'á'
ralt + shift - a : skhd -t 'Á'
ralt         - c : skhd -t 'č'
ralt + shift - c : skhd -t 'Č'
ralt         - d : skhd -t 'ď'
ralt + shift - d : skhd -t 'Ď'
ralt         - e : skhd -t 'ě'
ralt + shift - e : skhd -t 'Ě'
ralt         - w : skhd -t 'é'
ralt + shift - w : skhd -t 'É'
ralt         - i : skhd -t 'í'
ralt + shift - i : skhd -t 'Í'
ralt         - n : skhd -t 'ň'
ralt + shift - n : skhd -t 'Ň'
ralt         - o : skhd -t 'ó'
ralt + shift - o : skhd -t 'Ó'
ralt         - r : skhd -t 'ř'
ralt + shift - r : skhd -t 'Ř'
ralt         - s : skhd -t 'š'
ralt + shift - s : skhd -t 'Š'
ralt         - t : skhd -t 'ť'
ralt + shift - t : skhd -t 'Ť'
ralt         - u : skhd -t 'ů'
ralt + shift - u : skhd -t 'Ů'
ralt         - j : skhd -t 'ú'
ralt + shift - j : skhd -t 'Ú'
ralt         - y : skhd -t 'ý'
ralt + shift - y : skhd -t 'Ý'
ralt         - z : skhd -t 'ž'
ralt + shift - z : skhd -t 'Ž'


# fast focus desktop
#cmd - left  : yabai -m space --focus $(yabai -m query --spaces --display | jq -r 'sort_by(.index) | (.[] | select(.focused==1)).index as $cur | [(.[]|select(.index == $cur-1)), last] | first.index')
#cmd - right : yabai -m space --focus $(yabai -m query --spaces --display | jq -r 'sort_by(.index) | (.[] | select(.focused==1)).index as $cur | [(.[]|select(.index == $cur+1)), first] | first.index')
#cmd - down  : yabai -m display --focus prev || yabai -m display --focus last
#cmd - up    : yabai -m display --focus next || yabai -m display --focus first
cmd - escape  : yabai -m display --focus next || yabai -m display --focus first

# Move focus between unsticky windows
cmd - 1 : yabai -m space --focus $(yabai -m query --displays --display | jq '.spaces[0]'); yabai -m window --focus $(yabai -m query --windows --space | jq -r '[.[]|select(.sticky==0)] | sort_by(.id) | to_entries | (.[]|select(.value.focused==1)).key as $cur | [(.[]|select(.key==$cur)), first] | first.value.id')
cmd - 2 : yabai -m space --focus $(yabai -m query --displays --display | jq '.spaces[1]'); yabai -m window --focus $(yabai -m query --windows --space | jq -r '[.[]|select(.sticky==0)] | sort_by(.id) | to_entries | (.[]|select(.value.focused==1)).key as $cur | [(.[]|select(.key==$cur)), first] | first.value.id')

cmd - 3 : yabai -m space --focus $(yabai -m query --displays --display | jq '.spaces[2]'); yabai -m window --focus $(yabai -m query --windows --space | jq -r '[.[]|select(.sticky==0)] | sort_by(.id) | to_entries | (.[]|select(.value.focused==1)).key as $cur | [(.[]|select(.key==$cur)), first] | first.value.id')

cmd - 4 : yabai -m space --focus $(yabai -m query --displays --display | jq '.spaces[3]'); yabai -m window --focus $(yabai -m query --windows --space | jq -r '[.[]|select(.sticky==0)] | sort_by(.id) | to_entries | (.[]|select(.value.focused==1)).key as $cur | [(.[]|select(.key==$cur)), first] | first.value.id')

cmd - 5 : yabai -m space --focus $(yabai -m query --displays --display | jq '.spaces[4]'); yabai -m window --focus $(yabai -m query --windows --space | jq -r '[.[]|select(.sticky==0)] | sort_by(.id) | to_entries | (.[]|select(.value.focused==1)).key as $cur | [(.[]|select(.key==$cur)), first] | first.value.id')

cmd - 6 : yabai -m space --focus $(yabai -m query --displays --display | jq '.spaces[5]'); yabai -m window --focus $(yabai -m query --windows --space | jq -r '[.[]|select(.sticky==0)] | sort_by(.id) | to_entries | (.[]|select(.value.focused==1)).key as $cur | [(.[]|select(.key==$cur)), first] | first.value.id')

cmd - 7 : yabai -m space --focus $(yabai -m query --displays --display | jq '.spaces[6]'); yabai -m window --focus $(yabai -m query --windows --space | jq -r '[.[]|select(.sticky==0)] | sort_by(.id) | to_entries | (.[]|select(.value.focused==1)).key as $cur | [(.[]|select(.key==$cur)), first] | first.value.id')

cmd - 8 : yabai -m space --focus $(yabai -m query --displays --display | jq '.spaces[7]'); yabai -m window --focus $(yabai -m query --windows --space | jq -r '[.[]|select(.sticky==0)] | sort_by(.id) | to_entries | (.[]|select(.value.focused==1)).key as $cur | [(.[]|select(.key==$cur)), first] | first.value.id')

cmd - 9 : yabai -m space --focus $(yabai -m query --displays --display | jq '.spaces[8]'); yabai -m window --focus $(yabai -m query --windows --space | jq -r '[.[]|select(.sticky==0)] | sort_by(.id) | to_entries | (.[]|select(.value.focused==1)).key as $cur | [(.[]|select(.key==$cur)), first] | first.value.id')


# Navigation
cmd - tab   : yabai -m window --focus $(yabai -m query --windows --space | jq -r '[.[]|select(.sticky==0)] | sort_by(.id) | to_entries | (.[]|select(.value.focused==1)).key as $cur | [(.[]|select(.key==$cur+1)), first] | first.value.id') || \
                yabai -m window --focus $(yabai -m query --windows --space | jq -r 'sort_by(.sticky, .id) | first.id')
cmd - f19   : yabai -m window --focus $(yabai -m query --windows --space | jq -r '[.[]|select(.sticky==0)] | sort_by(.id) | to_entries | (.[]|select(.value.focused==1)).key as $cur | [(.[]|select(.key==$cur-1)), last] | first.value.id')  || \
                yabai -m window --focus $(yabai -m query --windows --space | jq -r 'sort_by(.sticky, -.id) | first.id')
lctrl - f19 : skhd -k "lctrl - tab"
alt - left  : yabai -m window --focus west
alt - down  : yabai -m window --focus south
alt - up    : yabai -m window --focus north
alt - right : yabai -m window --focus east

# Align windows
lctrl + alt - left  : yabai -m window --warp west
lctrl + alt - down  : yabai -m window --warp south
lctrl + alt - up    : yabai -m window --warp north
lctrl + alt - right : yabai -m window --warp east

# Move window to workspace or display
cmd + lctrl - left  : yabai -m window --space $(yabai -m query --spaces --display | jq -r 'sort_by(.index) | (.[] | select(.focused==1)).index as $cur | [(.[]|select(.index == $cur-1)), last] | first.index')
cmd + lctrl - right : yabai -m window --space $(yabai -m query --spaces --display | jq -r 'sort_by(.index) | (.[] | select(.focused==1)).index as $cur | [(.[]|select(.index == $cur+1)), first] | first.index')
cmd + lctrl - down  : yabai -m window --display prev || yabai -m window --display last  ; yabai -m display --focus prev || yabai -m display --focus last
cmd + lctrl - up    : yabai -m window --display next || yabai -m window --display first ; yabai -m display --focus next || yabai -m display --focus first

# Move window to workspace
cmd + lctrl - 1 : yabai -m window --space $(yabai -m query --displays --display | jq '.spaces[0]')
cmd + lctrl - 2 : yabai -m window --space $(yabai -m query --displays --display | jq '.spaces[1]')
cmd + lctrl - 3 : yabai -m window --space $(yabai -m query --displays --display | jq '.spaces[2]')
cmd + lctrl - 4 : yabai -m window --space $(yabai -m query --displays --display | jq '.spaces[3]')
cmd + lctrl - 5 : yabai -m window --space $(yabai -m query --displays --display | jq '.spaces[4]')
cmd + lctrl - 6 : yabai -m window --space $(yabai -m query --displays --display | jq '.spaces[5]')
cmd + lctrl - 7 : yabai -m window --space $(yabai -m query --displays --display | jq '.spaces[6]')
cmd + lctrl - 8 : yabai -m window --space $(yabai -m query --displays --display | jq '.spaces[7]')
cmd + lctrl - 9 : yabai -m window --space $(yabai -m query --displays --display | jq '.spaces[8]')

# Resize windows
shift + alt - left  : yabai -m window --resize left:-50:0; \
                      yabai -m window --resize right:-50:0
shift + alt - down  : yabai -m window --resize bottom:0:50; \
                      yabai -m window --resize top:0:50
shift + alt - up    : yabai -m window --resize top:0:-50; \
                      yabai -m window --resize bottom:0:-50
shift + alt - right : yabai -m window --resize right:50:0; \
                      yabai -m window --resize left:50:0

# Equalize size of windows
shift + alt - 0 : yabai -m space --balance

# Enable / Disable gaps in current workspace
cmd + lctrl - g : yabai -m space --toggle padding; yabai -m space --toggle gap

# Rotate windows clockwise and anticlockwise
alt - space         : yabai -m space --rotate 270
shift + alt - space : yabai -m space --rotate 90

# Rotate on X and Y Axis
shift + alt - x : yabai -m space --mirror x-axis
shift + alt - y : yabai -m space --mirror y-axis

# Set insertion point for focused container
shift + lctrl + alt - left  : yabai -m window --insert west
shift + lctrl + alt - down  : yabai -m window --insert south
shift + lctrl + alt - up    : yabai -m window --insert north
shift + lctrl + alt - right : yabai -m window --insert east

# Create / Destroy space
# TODO: remove this ugly workaround
cmd + lctrl - return : yabai -m space --create; yabai -m space --focus $(yabai -m query --spaces --display | jq -r 'sort_by(.index) | last.index'); \
                       yabai -m query --spaces | jq -e '([.[].display]|sort|last) as $lastmon | .[]| select(.focused==1).display != $lastmon' || exit 0; \
                       osascript -e 'tell application id "tracesOf.Uebersicht" to set hidden of widget id "simple-bar-spaces-jsx" to true'; \
                       sleep 0.1; \
                       osascript -e 'tell application id "tracesOf.Uebersicht" to set hidden of widget id "simple-bar-spaces-jsx" to false'

cmd + lctrl - w      : yabai -m space --focus $(yabai -m query --spaces --display | jq -r 'sort_by(.index) | (.[] | select(.focused==1)).index as $cur | .[]|select(.index == $cur-1).index'); \
                       yabai -m space $(yabai -m query --spaces --display | jq -r 'sort_by(.index) | (.[] | select(.focused==1)).index as $cur | .[]|select(.index == $cur+1).index') --destroy; \
                       yabai -m query --spaces | jq -e '([.[].display]|sort|last) as $lastmon | .[]| select(.focused==1).display != $lastmon' || exit 0; \
                       osascript -e 'tell application id "tracesOf.Uebersicht" to set hidden of widget id "simple-bar-spaces-jsx" to true'; \
                       sleep 0.1; \
                       osascript -e 'tell application id "tracesOf.Uebersicht" to set hidden of widget id "simple-bar-spaces-jsx" to false'

# Float / Unfloat window
cmd + lctrl - f : \
  file="$HOME/.config/yabai/floating_windows"; \
  app=$(yabai -m query --windows --window | jq '"^\(.app)$"'); \
  title=$(yabai -m query --windows --window | jq '"^\(.title)$"'); \
  rule="yabai -m rule --add app=$app title=$title"; \
  test $(yabai -m query --windows --window | jq -r .floating) -eq 0 && \
  (echo "$rule manage=off" | tee "$file.tmp" | sh -x && cat "$file" >> "$file.tmp" 2>/dev/null; sort -u "$file.tmp" > "$file"; rm -f "$file.tmp") || \
  (echo "$rule manage=on" | sh -sx; sed -i "/$rule manage=off/d" "$file")

# Stick / Unstick window
cmd + lctrl - s : yabai -m window --toggle sticky

# Restart Yabai
cmd + lctrl - r : \
    /usr/bin/env osascript <<< \
        "display notification \"Restarting Yabai\" with title \"Yabai\""; \
    launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"

# Make window native fullscreen
alt - f         : yabai -m window --toggle zoom-fullscreen; yabai -m window --focus "$(yabai -m query --windows --window | jq -er .id)"
#shift + alt - f : yabai -m window --toggle native-fullscreen
cmd - m         : yabai -m window --toggle zoom-fullscreen; yabai -m window --focus "$(yabai -m query --windows --window | jq -er .id)"
#shift + cmd - m : yabai -m window --toggle native-fullscreen
